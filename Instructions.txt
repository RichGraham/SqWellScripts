====Building====
./makeAll.sh icc <—compiler name (optional) defaults to gcc

====Setting up simulations====
* sqWellCp.sh: Creates a copy of an input file with a new name and new output folders

* setupRun.sh (main distro): Generates output folders and hpc submission scripts  
   	- checkOutputFolder.sh: Checks input file and output folder names are the same
	- createDirs.sh (main distro): Creates required output folders 

* createDirsConfig.sh (main distro -  only needed if configs are to be saved (set log configurations = 1 in input file): 
	Generates nested subfolders to accept the output configurations

* quickRestart

* loopSub.sh: Starts an hpc run that resubmits itself (E.G. loopSub_sqW.sh -n N10Test1-1  -n flag specifies a new run)
  IMPORTANT: If given the -n flag then given filename will be the started run (no new files created)
             If no -n flag then the given filename will be used to spawn a newly named run  
	-restartSub_sqW.sh: sets up a restart run given old and new filenames


* clipQuad: Attempts to create a biasing function that's localised around the density of states' bottle-neck

==== Analysing results ====

* doBoth.sh: Averages and presents sqWell output data
	-collateClip: averages over temperatures individually for a single run
	-blockVary : examines each block and finds the mean n_SW and the max/min value that has at least 10 visits.
	-showAll.sh : plots summary data for a run to allow checking and diagnosis of issues

* batchOutput: Compares the output of multiple runs, to check reproducibility.
	-doBoth.sh

* batchAverage: Averages over the output of multiple runs [uses the same .list files as batchOutput].
	-doBoth.sh
	-multiAverage: 
This code outputs the following files:
	§ <NAME>.list.dat : The FE barrier at Tinterest (from Tinterest)
	§ <NAME>.list.dat.all : [N columns] The FE barrier at Tinterest (from each temperature)
	§ <NAME>.list.dat.FE.stc :  The FE barrier at Tinterest (stitched together using the best available temperature)
	§ <NAME>.list.dat.invT.all : [N columns] 1/T vs n_E (from each temperature)
	§ <NAME>.list.dat.invT.stc : 1/T vs n_E (stitched together using the best available temperature)


* dosMapping: takes an existing free energy landscape and maps it to a new temperature via density of states.
	Also computes 1/T vs E (via DOS)

====Extracting data for new order parameters====

____Nc output directly____

_Individual runs_

* showAllConfigDist_sqW.sh :   Plots P(nc|E) for a range of different tempering levels
	Eg: showAllConfigDist_sqW.sh [base folder][int energy value][int LowestTemp][int HighestTemp]	
	This code outputs the following files (in the same folder as the nc data from the simulation):	
		§ Norm_<EnergyVal>.dat : normalised data for each tempering level
		§ Ave_<EnergyVal>.dat  : normalised data summed over each tempering level

	Runs:
		- aveNc_sqW : Produces nc distribution data:
	 		(Takes nc output data, normalises and produces average over all tempering levels)

		- multiAveNc_sqW : Produces nc distribution data averaged over several runs
			(Computes P(nc|E) averaged over multiple runs for all energies and saves to folder)


_With a .list file_

* configAllE_sqW.sh : For ALL energies Computes P(nc|E) averaged over multiple runs and saves to folder (this is a step for later scripts - no direct plotting of output). 
	eg:configAllE_sqW.sh 256T.477c40D2.list 
	Runs:
		- multiAveNc
	This code outputs the following files:
		§ listfile/Batch_**.dat (for one file for each energy
*** To see them all run xmgrace listfile/BatchAve_*.dat


* batchConfigShow : Compares P(nc|E) average of multiple runs, to check reproducibility. Compares data summed over all tempering levels
	eg batchConfigShow_sw.sh [.list file (as below)][Energy of Interest]
	eg batchConfigShow_sqW.sh 256T.477c40D2.list 800
	Runs:
		- aveNc_sqW (cds into folders and does individual averages)
		- multiAveNc_sqW (averages over all runs)

* OP_mapping
[Assumes that the landscape and P(nc|E) have been computed prior to running]
	eg OP_mapping 0 0.446 128T.446B16j1.list.dat.FE.stc 128T.446B16k0/ 0.446


____Configurations saved to subfolders (NOT EXTENSIVELY TESTED)____
* allConfigDist_sqW.sh :  Goes into each T and E config folder, computes nc from each config file and updates the histogram
       - confUpEn_sqW.sh:  Computes P(nc|E) for a specific E for temps LowestTemp....HighestTemp                                     - updateConfigDist_sqW: C code to compute nc (Steihardt-Nelson) and delete config file

* showConfigDist_sqW.sh : Plots P(nc|E) for a range of different tempering levels


